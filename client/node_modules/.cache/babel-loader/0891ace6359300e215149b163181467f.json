{"ast":null,"code":"import _slicedToArray from\"/Users/alexandersuarez/code/weather-data/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import API from'../utils/API';import{Card,CardText,CardBody,CardTitle,CardSubtitle,Button}from'reactstrap';import NavbarComponent from'../components/NavbarComponent';function SavedWeatherPoints(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),savedWeather=_useState2[0],setSavedWeather=_useState2[1];useEffect(function(){loadWeather();},[]);function loadWeather(){API.getAllWeather().then(function(res){//  console.log('saved to state: ',res.data)\nsetSavedWeather(res.data);});}function handleDeleteWeather(id){API.deleteWeather(id).then(function(res){loadWeather();});alert('Deleted!');};// console.log('savedWeather: ', typeof savedWeather)\nreturn React.createElement(\"div\",null,React.createElement(NavbarComponent,null),!savedWeather?React.createElement(\"h1\",null,\"No saved Results\"):savedWeather.map(function(weather){return React.createElement(Card,{key:weather._id},React.createElement(CardBody,null,React.createElement(CardSubtitle,null,React.createElement(\"strong\",null,\"Country:\"),\" \",weather.country),React.createElement(CardSubtitle,null,\"City: \",weather.city),React.createElement(CardText,null,\"Temp: \",weather.temp),React.createElement(CardText,null,\"Feels Like: \",weather.feelsLike),React.createElement(CardText,null,\"Latitude: \",weather.latitude),React.createElement(CardText,null,\"Longitude: \",weather.longitude),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(Button,{color:\"danger\",onClick:function onClick(){return handleDeleteWeather(weather._id);}},\"Delete this weather point\")));}),console.log(savedWeather));}export default SavedWeatherPoints;","map":{"version":3,"sources":["/Users/alexandersuarez/code/weather-data/src/pages/SavedWeatherPoints.js"],"names":["React","useState","useEffect","API","Card","CardText","CardBody","CardTitle","CardSubtitle","Button","NavbarComponent","SavedWeatherPoints","savedWeather","setSavedWeather","loadWeather","getAllWeather","then","res","data","handleDeleteWeather","id","deleteWeather","alert","map","weather","_id","country","city","temp","feelsLike","latitude","longitude","console","log"],"mappings":"2HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,OACIC,IADJ,CACUC,QADV,CACoBC,QADpB,CAC8BC,SAD9B,CACyCC,YADzC,CACuDC,MADvD,KAEO,YAFP,CAGA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CAGA,QAASC,CAAAA,kBAAT,EAA8B,eACcV,QAAQ,EADtB,wCACnBW,YADmB,eACLC,eADK,eAG1BX,SAAS,CAAC,UAAM,CACZY,WAAW,GACd,CAFQ,CAEN,EAFM,CAAT,CAIA,QAASA,CAAAA,WAAT,EAAuB,CACnBX,GAAG,CAACY,aAAJ,GACKC,IADL,CACU,SAAAC,GAAG,CAAI,CACT;AACAJ,eAAe,CAACI,GAAG,CAACC,IAAL,CAAf,CACH,CAJL,EAKH,CAED,QAASC,CAAAA,mBAAT,CAA6BC,EAA7B,CAAiC,CAC7BjB,GAAG,CAACkB,aAAJ,CAAkBD,EAAlB,EAAsBJ,IAAtB,CAA2B,SAAAC,GAAG,CAAI,CAC9BH,WAAW,GACd,CAFD,EAGAQ,KAAK,CAAC,UAAD,CAAL,CAEH,EAID;AACA,MACI,gCACI,oBAAC,eAAD,MADJ,CAEK,CAACV,YAAD,CAAgB,iDAAhB,CACGA,YAAY,CAACW,GAAb,CAAiB,SAAAC,OAAO,QAEpB,qBAAC,IAAD,EAAM,GAAG,CAAEA,OAAO,CAACC,GAAnB,EACI,oBAAC,QAAD,MAEI,oBAAC,YAAD,MAAc,6CAAd,KAAyCD,OAAO,CAACE,OAAjD,CAFJ,CAGI,oBAAC,YAAD,eAAqBF,OAAO,CAACG,IAA7B,CAHJ,CAII,oBAAC,QAAD,eAAiBH,OAAO,CAACI,IAAzB,CAJJ,CAKI,oBAAC,QAAD,qBAAuBJ,OAAO,CAACK,SAA/B,CALJ,CAMI,oBAAC,QAAD,mBAAqBL,OAAO,CAACM,QAA7B,CANJ,CAOI,oBAAC,QAAD,oBAAsBN,OAAO,CAACO,SAA9B,CAPJ,CASI,8BATJ,CAUI,8BAVJ,CAYI,oBAAC,MAAD,EAAQ,KAAK,CAAC,QAAd,CAAuB,OAAO,CAAE,yBAAMZ,CAAAA,mBAAmB,CAACK,OAAO,CAACC,GAAT,CAAzB,EAAhC,8BAZJ,CADJ,CAFoB,EAAxB,CAHR,CAsBKO,OAAO,CAACC,GAAR,CAAYrB,YAAZ,CAtBL,CADJ,CA0BH,CAED,cAAeD,CAAAA,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport API from '../utils/API'\nimport {\n    Card, CardText, CardBody, CardTitle, CardSubtitle, Button\n} from 'reactstrap';\nimport NavbarComponent from '../components/NavbarComponent'\n\n\nfunction SavedWeatherPoints() {\n    const [savedWeather, setSavedWeather] = useState()\n\n    useEffect(() => {\n        loadWeather()\n    }, [])\n\n    function loadWeather() {\n        API.getAllWeather()\n            .then(res => {\n                //  console.log('saved to state: ',res.data)\n                setSavedWeather(res.data)\n            })\n    }\n\n    function handleDeleteWeather(id) {\n        API.deleteWeather(id).then(res => {\n            loadWeather()\n        })\n        alert('Deleted!')\n\n    };\n\n\n\n    // console.log('savedWeather: ', typeof savedWeather)\n    return (\n        <div>\n            <NavbarComponent/>\n            {!savedWeather ? <h1>No saved Results</h1> :\n                savedWeather.map(weather => (\n\n                    <Card key={weather._id}>\n                        <CardBody>\n\n                            <CardSubtitle><strong>Country:</strong> {weather.country}</CardSubtitle>\n                            <CardSubtitle>City: {weather.city}</CardSubtitle>\n                            <CardText>Temp: {weather.temp}</CardText>\n                            <CardText>Feels Like: {weather.feelsLike}</CardText>\n                            <CardText>Latitude: {weather.latitude}</CardText>\n                            <CardText>Longitude: {weather.longitude}</CardText>\n                            {/* <Link to={`/saved/${weather._id}`}>View city weather </Link> */}\n                            <br />\n                            <br />\n\n                            <Button color=\"danger\" onClick={() => handleDeleteWeather(weather._id)}>Delete this weather point</Button>\n                        </CardBody>\n                    </Card>\n                ))}\n            {console.log(savedWeather)}\n        </div>\n    )\n}\n\nexport default SavedWeatherPoints"]},"metadata":{},"sourceType":"module"}