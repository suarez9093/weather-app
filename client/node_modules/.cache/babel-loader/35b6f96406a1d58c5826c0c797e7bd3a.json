{"ast":null,"code":"var _jsxFileName = \"/Users/alexandersuarez/code/weather-data/client/src/pages/SavedWeatherPoints.js\";\nimport React, { useState, useEffect } from 'react';\nimport API from '../utils/API';\nimport { Card, CardText, CardBody, CardSubtitle, Button } from 'reactstrap';\nimport NavbarComponent from '../components/NavbarComponent';\n\nfunction SavedWeatherPoints() {\n  const [savedWeather, setSavedWeather] = useState();\n  useEffect(() => {\n    loadWeather();\n  }, []);\n\n  function loadWeather() {\n    API.getAllWeather().then(res => {\n      setSavedWeather(res.data);\n    });\n  }\n\n  function handleDeleteWeather(id) {\n    API.deleteWeather(id).then(res => {\n      loadWeather();\n    });\n    alert('Deleted!');\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(NavbarComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), !savedWeather ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"No saved Results\") : savedWeather.map(weather => React.createElement(Card, {\n    key: weather._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(CardSubtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Country:\"), \" \", weather.country), React.createElement(CardSubtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"City: \", weather.city), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Temp: \", ((weather.temp - 273.15) * 1.8 + 32).toFixed(2), \"\\xB0\"), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Feels Like: \", ((weather.feelsLike - 273.15) * 1.8 + 32).toFixed(2), \"\\xB0\"), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Latitude: \", weather.latitude), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Longitude: \", weather.longitude), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"danger\",\n    onClick: () => handleDeleteWeather(weather._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Delete this weather point\")))));\n}\n\nexport default SavedWeatherPoints;","map":{"version":3,"sources":["/Users/alexandersuarez/code/weather-data/client/src/pages/SavedWeatherPoints.js"],"names":["React","useState","useEffect","API","Card","CardText","CardBody","CardSubtitle","Button","NavbarComponent","SavedWeatherPoints","savedWeather","setSavedWeather","loadWeather","getAllWeather","then","res","data","handleDeleteWeather","id","deleteWeather","alert","map","weather","_id","country","city","temp","toFixed","feelsLike","latitude","longitude"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SACIC,IADJ,EACUC,QADV,EACoBC,QADpB,EAC8BC,YAD9B,EAC4CC,MAD5C,QAEO,YAFP;AAGA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,SAASC,kBAAT,GAA8B;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,WAAT,GAAuB;AACnBV,IAAAA,GAAG,CAACW,aAAJ,GACKC,IADL,CACUC,GAAG,IAAI;AACTJ,MAAAA,eAAe,CAACI,GAAG,CAACC,IAAL,CAAf;AACH,KAHL;AAIH;;AAED,WAASC,mBAAT,CAA6BC,EAA7B,EAAiC;AAC7BhB,IAAAA,GAAG,CAACiB,aAAJ,CAAkBD,EAAlB,EAAsBJ,IAAtB,CAA2BC,GAAG,IAAI;AAC9BH,MAAAA,WAAW;AACd,KAFD;AAGAQ,IAAAA,KAAK,CAAC,UAAD,CAAL;AAEH;;AAAA;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEK,CAACV,YAAD,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAhB,GACGA,YAAY,CAACW,GAAb,CAAiBC,OAAO,IAEpB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,OAAO,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd,OAAyCD,OAAO,CAACE,OAAjD,CAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqBF,OAAO,CAACG,IAA7B,CAHJ,EAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiB,CAAE,CAACH,OAAO,CAACI,IAAR,GAAa,MAAd,IAAsB,GAAvB,GAA4B,EAA7B,EAAiCC,OAAjC,CAAyC,CAAzC,CAAjB,SAJJ,EAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAuB,CAAE,CAACL,OAAO,CAACM,SAAR,GAAkB,MAAnB,IAA2B,GAA5B,GAAiC,EAAlC,EAAsCD,OAAtC,CAA8C,CAA9C,CAAvB,SALJ,EAMI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqBL,OAAO,CAACO,QAA7B,CANJ,EAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsBP,OAAO,CAACQ,SAA9B,CAPJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAYI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE,MAAMb,mBAAmB,CAACK,OAAO,CAACC,GAAT,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAZJ,CADJ,CAFJ,CAHR,CADJ;AA0BH;;AAED,eAAed,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport API from '../utils/API'\nimport {\n    Card, CardText, CardBody, CardSubtitle, Button\n} from 'reactstrap';\nimport NavbarComponent from '../components/NavbarComponent'\n\nfunction SavedWeatherPoints() {\n    const [savedWeather, setSavedWeather] = useState()\n\n    useEffect(() => {\n        loadWeather()\n    }, [])\n\n    function loadWeather() {\n        API.getAllWeather()\n            .then(res => {\n                setSavedWeather(res.data)\n            })\n    }\n\n    function handleDeleteWeather(id) {\n        API.deleteWeather(id).then(res => {\n            loadWeather()\n        })\n        alert('Deleted!')\n\n    };\n   \n    return (\n        <div>\n            <NavbarComponent/>\n            {!savedWeather ? <h1>No saved Results</h1> :\n                savedWeather.map(weather => (\n                    \n                    <Card key={weather._id}>\n                        <CardBody>\n\n                            <CardSubtitle><strong>Country:</strong> {weather.country}</CardSubtitle>\n                            <CardSubtitle>City: {weather.city}</CardSubtitle>\n                            <CardText>Temp: {(((weather.temp-273.15)*1.8)+32).toFixed(2)}°</CardText>\n                            <CardText>Feels Like: {(((weather.feelsLike-273.15)*1.8)+32).toFixed(2)}°</CardText>\n                            <CardText>Latitude: {weather.latitude}</CardText>\n                            <CardText>Longitude: {weather.longitude}</CardText>\n                            {/* <Link to={`/saved/${weather._id}`}>View city weather </Link> */}\n                            <br />\n                            <br />\n\n                            <Button color=\"danger\" onClick={() => handleDeleteWeather(weather._id)}>Delete this weather point</Button>\n                        </CardBody>\n                    </Card>\n        \n                ))}\n        </div>\n    )\n}\n\nexport default SavedWeatherPoints"]},"metadata":{},"sourceType":"module"}