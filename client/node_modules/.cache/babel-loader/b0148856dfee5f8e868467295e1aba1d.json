{"ast":null,"code":"var _jsxFileName = \"/Users/alexandersuarez/code/weather-data/client/src/pages/SavedWeatherPoints.js\";\nimport React, { useState, useEffect } from 'react';\nimport API from '../utils/API';\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport NavbarComponent from '../components/NavbarComponent';\nimport { DayWrapper } from \"../styles\";\n\nfunction SavedWeatherPoints() {\n  const [savedWeather, setSavedWeather] = useState();\n  useEffect(() => {\n    loadWeather();\n  }, []);\n\n  function loadWeather() {\n    API.getAllWeather().then(res => {\n      //  console.log('saved to state: ',res.data)\n      setSavedWeather(res.data);\n    });\n  }\n\n  function handleDeleteWeather(id) {\n    API.deleteWeather(id).then(res => {\n      loadWeather();\n    });\n    alert('Deleted!');\n  }\n\n  ; // console.log('savedWeather: ', typeof savedWeather)\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(NavbarComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), !savedWeather ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"No saved Results\") : savedWeather.map(weather => React.createElement(Card, {\n    key: weather._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(CardSubtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Country:\"), \" \", weather.country), React.createElement(CardSubtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"City: \", weather.city), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Temp: \", weather.temp), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Feels Like: \", weather.feelsLike), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Latitude: \", weather.latitude), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Longitude: \", weather.longitude), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"danger\",\n    onClick: () => handleDeleteWeather(weather._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Delete this weather point\")))), React.createElement(DayWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, props.day), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, props.temp.toFixed(1), \"\\xB0\"), React.createElement(\"img\", {\n    src: `${process.env.PUBLIC_URL}/icons/${props.icon}.png`,\n    alt: props.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"High:\"), \" \", props.high.toFixed(1), \"\\xB0\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Low:\"), \" \", props.low.toFixed(1), \"\\xB0\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Precip:\"), \" \", props.precip, \"%\")))));\n}\n\nexport default SavedWeatherPoints;","map":{"version":3,"sources":["/Users/alexandersuarez/code/weather-data/client/src/pages/SavedWeatherPoints.js"],"names":["React","useState","useEffect","API","Card","CardText","CardBody","CardTitle","CardSubtitle","Button","NavbarComponent","DayWrapper","SavedWeatherPoints","savedWeather","setSavedWeather","loadWeather","getAllWeather","then","res","data","handleDeleteWeather","id","deleteWeather","alert","map","weather","_id","country","city","temp","feelsLike","latitude","longitude","props","day","toFixed","process","env","PUBLIC_URL","icon","description","high","low","precip"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport API from '../utils/API'\nimport {\n    Card, CardText, CardBody, CardTitle, CardSubtitle, Button\n} from 'reactstrap';\nimport NavbarComponent from '../components/NavbarComponent'\nimport { DayWrapper } from \"../styles\";\n\n\nfunction SavedWeatherPoints() {\n    const [savedWeather, setSavedWeather] = useState()\n\n    useEffect(() => {\n        loadWeather()\n    }, [])\n\n    function loadWeather() {\n        API.getAllWeather()\n            .then(res => {\n                //  console.log('saved to state: ',res.data)\n                setSavedWeather(res.data)\n            })\n    }\n\n    function handleDeleteWeather(id) {\n        API.deleteWeather(id).then(res => {\n            loadWeather()\n        })\n        alert('Deleted!')\n\n    };\n\n\n\n    // console.log('savedWeather: ', typeof savedWeather)\n    return (\n        <div>\n            <NavbarComponent/>\n            {!savedWeather ? <h1>No saved Results</h1> :\n                savedWeather.map(weather => (\n\n                    <Card key={weather._id}>\n                        <CardBody>\n\n                            <CardSubtitle><strong>Country:</strong> {weather.country}</CardSubtitle>\n                            <CardSubtitle>City: {weather.city}</CardSubtitle>\n                            <CardText>Temp: {weather.temp}</CardText>\n                            <CardText>Feels Like: {weather.feelsLike}</CardText>\n                            <CardText>Latitude: {weather.latitude}</CardText>\n                            <CardText>Longitude: {weather.longitude}</CardText>\n                            {/* <Link to={`/saved/${weather._id}`}>View city weather </Link> */}\n                            <br />\n                            <br />\n\n                            <Button color=\"danger\" onClick={() => handleDeleteWeather(weather._id)}>Delete this weather point</Button>\n                        </CardBody>\n                    </Card>\n                ))}\n               <DayWrapper >\n                <Card>\n                    <CardHeader>{props.day}</CardHeader>\n                    <CardBody>\n                        <h3>{props.temp.toFixed(1)}°</h3>\n                        <img src={`${process.env.PUBLIC_URL}/icons/${props.icon}.png`} alt={props.description} />\n                        <p><strong>High:</strong> {props.high.toFixed(1)}°</p>\n                        <p><strong>Low:</strong> {props.low.toFixed(1)}°</p>\n                        <p><strong>Precip:</strong> {props.precip}%</p>\n                    </CardBody>\n                </Card>\n            </DayWrapper>\n        </div>\n    )\n}\n\nexport default SavedWeatherPoints"]},"metadata":{},"sourceType":"module"}