{"ast":null,"code":"var _jsxFileName = \"/Users/alexandersuarez/code/weather-data/client/src/pages/SavedWeatherPoints.js\";\nimport React, { useState, useEffect } from 'react';\nimport API from '../utils/API';\nimport { Card, CardText, CardBody, Button } from 'reactstrap';\nimport NavbarComponent from '../components/NavbarComponent';\n\nfunction SavedWeatherPoints() {\n  const [savedWeather, setSavedWeather] = useState();\n  useEffect(() => {\n    loadWeather();\n  }, []);\n\n  function loadWeather() {\n    API.getAllWeather().then(res => {\n      setSavedWeather(res.data);\n    });\n  }\n\n  function handleDeleteWeather(id) {\n    API.deleteWeather(id).then(res => {\n      loadWeather();\n    });\n    alert('Deleted!');\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(NavbarComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), !savedWeather ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"No saved Results\") : savedWeather.map(weather => React.createElement(Card, {\n    key: weather._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Country:\"), \" \", weather.country), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"City:\"), \" \", weather.city), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Temp:\"), \" \", ((weather.temp - 273.15) * 1.8 + 32).toFixed(2), \"\\xB0\"), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Feels Like:\"), \" \", ((weather.feelsLike - 273.15) * 1.8 + 32).toFixed(2), \"\\xB0\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"btn-width\",\n    color: \"danger\",\n    onClick: () => handleDeleteWeather(weather._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Delete this weather point\")))));\n}\n\nexport default SavedWeatherPoints;","map":{"version":3,"sources":["/Users/alexandersuarez/code/weather-data/client/src/pages/SavedWeatherPoints.js"],"names":["React","useState","useEffect","API","Card","CardText","CardBody","Button","NavbarComponent","SavedWeatherPoints","savedWeather","setSavedWeather","loadWeather","getAllWeather","then","res","data","handleDeleteWeather","id","deleteWeather","alert","map","weather","_id","country","city","temp","toFixed","feelsLike"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SACIC,IADJ,EACUC,QADV,EACoBC,QADpB,EAC8BC,MAD9B,QAEO,YAFP;AAGA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,SAASC,kBAAT,GAA8B;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,EAAhD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,WAAT,GAAuB;AACnBT,IAAAA,GAAG,CAACU,aAAJ,GACKC,IADL,CACUC,GAAG,IAAI;AACTJ,MAAAA,eAAe,CAACI,GAAG,CAACC,IAAL,CAAf;AACH,KAHL;AAIH;;AAED,WAASC,mBAAT,CAA6BC,EAA7B,EAAiC;AAC7Bf,IAAAA,GAAG,CAACgB,aAAJ,CAAkBD,EAAlB,EAAsBJ,IAAtB,CAA2BC,GAAG,IAAI;AAC9BH,MAAAA,WAAW;AACd,KAFD;AAGAQ,IAAAA,KAAK,CAAC,UAAD,CAAL;AAEH;;AAAA;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEK,CAACV,YAAD,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAhB,GACGA,YAAY,CAACW,GAAb,CAAiBC,OAAO,IACpB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,OAAO,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAV,OAAqCD,OAAO,CAACE,OAA7C,CADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAV,OAAkCF,OAAO,CAACG,IAA1C,CAFJ,EAGI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAV,OAAkC,CAAE,CAACH,OAAO,CAACI,IAAR,GAAe,MAAhB,IAA0B,GAA3B,GAAkC,EAAnC,EAAuCC,OAAvC,CAA+C,CAA/C,CAAlC,SAHJ,EAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAV,OAAwC,CAAE,CAACL,OAAO,CAACM,SAAR,GAAoB,MAArB,IAA+B,GAAhC,GAAuC,EAAxC,EAA4CD,OAA5C,CAAoD,CAApD,CAAxC,SAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,KAAK,EAAC,QAApC;AAA6C,IAAA,OAAO,EAAE,MAAMV,mBAAmB,CAACK,OAAO,CAACC,GAAT,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAPJ,CADJ,CADJ,CAHR,CADJ;AAmBH;;AACD,eAAed,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport API from '../utils/API'\nimport {\n    Card, CardText, CardBody, Button\n} from 'reactstrap';\nimport NavbarComponent from '../components/NavbarComponent'\n\nfunction SavedWeatherPoints() {\n    const [savedWeather, setSavedWeather] = useState()\n    useEffect(() => {\n        loadWeather()\n    }, [])\n\n    function loadWeather() {\n        API.getAllWeather()\n            .then(res => {\n                setSavedWeather(res.data)\n            })\n    }\n\n    function handleDeleteWeather(id) {\n        API.deleteWeather(id).then(res => {\n            loadWeather()\n        })\n        alert('Deleted!')\n\n    };\n\n    return (\n        <div>\n            <NavbarComponent />\n            {!savedWeather ? <h1>No saved Results</h1> :\n                savedWeather.map(weather => (\n                    <Card key={weather._id}>\n                        <CardBody>\n                            <CardText><strong>Country:</strong> {weather.country}</CardText>\n                            <CardText><strong>City:</strong> {weather.city}</CardText>\n                            <CardText><strong>Temp:</strong> {(((weather.temp - 273.15) * 1.8) + 32).toFixed(2)}°</CardText>\n                            <CardText><strong>Feels Like:</strong> {(((weather.feelsLike - 273.15) * 1.8) + 32).toFixed(2)}°</CardText>\n                            <br />\n                            <br />\n                            <Button className=\"btn-width\" color=\"danger\" onClick={() => handleDeleteWeather(weather._id)}>Delete this weather point</Button>\n                        </CardBody>\n                    </Card>\n                ))}\n        </div>\n    )\n}\nexport default SavedWeatherPoints"]},"metadata":{},"sourceType":"module"}